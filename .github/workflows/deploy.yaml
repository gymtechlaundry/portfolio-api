name: Build and Deploy Portfolio API

on:
  push:
    branches:
      - main
    paths:
      - 'portfolio-api/**'
      - '.github/workflows/deploy-portfolio-api.yml'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/portfolio-api
  IMAGE_TAG: ${{ github.sha }}
  RELEASE_NAME: portfolio-api-${{ github.sha }}
  NAMESPACE: devincooper

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./portfolio-api
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          no-cache: true

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production

    steps:
      - name: Checkout Helm Charts
        uses: actions/checkout@v4
        with:
          repository: darc-software/helm-values
          path: helm-values
          ssh-key: ${{ secrets.HELM_REPO_DEPLOY_KEY }}

      - name: Deploy to K3s via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.K3S_HOST }}
          username: ${{ secrets.K3S_USER }}
          key: ${{ secrets.K3S_SSH_KEY }}
          envs: IMAGE_NAME,IMAGE_TAG,RELEASE_NAME,NAMESPACE
          script: |
            set -e
            export KUBECONFIG=$HOME/.kube/config

            echo "ðŸ“¦ Deploying Portfolio API to K3s"
            cd ~/helm-values/charts/portfolio-api

            helm upgrade --install "$RELEASE_NAME" . \
              --namespace "$NAMESPACE" \
              --create-namespace \
              --set image.repository=$IMAGE_NAME \
              --set image.tag=$IMAGE_TAG \
              --set apiKeySecretName=portfolio-api-secret \
              --atomic --wait

            echo "âœ… Deployment complete"